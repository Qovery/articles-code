apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "kubernetes.fullname" . }}
  labels:
    {{- include "kubernetes.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.clusterIssuer }}
    kubernetes.io/ingress.class: {{ .Values.ingressClass | quote }}
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-csrftoken"
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: "{{- .Values.authUrl -}}"
    nginx.ingress.kubernetes.io/auth-signin: "{{- .Values.signinUrl -}}"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $name_upstream_1 $upstream_cookie_{{- .Values.oauthConfig.cookieName -}};
      access_by_lua_block {
        if ngx.var.name_upstream_1 ~= "" then
          ngx.header["Set-Cookie"] = "{{- .Values.oauthConfig.cookieName -}}=" ..  ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
        end
      }
spec:
  tls:
    - hosts:
        - {{ .Values.hostName | quote }}
  rules:
    - host: {{ .Values.hostName | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "kubernetes.fullname" . }}
                port:
                  number: {{ .Values.portal.port }}
